@page "/reset-password"
@inject HttpClient HttpClient
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<div class="style-wrapper">
    <Header/>
    <h1>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa, fugit!</h1>
    <div style="height: 100%; display: block;">

        <div class="login d-flex flex-column align-items-center mb-5">

            @if(isChanged)
            {
                <h3 class="text-white">Password is changed</h3>

                <p class="text-white">You can close this page.</p>
            }
            else
            {
                <EditForm Model="passwordForm" OnValidSubmit="ChangePassword">
                    <span class="paragraph" style="margin-bottom: 2vh;">NEW PASSWORD</span>
                    <div class="d-flex flex-column">
                        <div style="position: relative;">
                            <input type="@(ToglePassword ? "password" : "text")" class="form-control" placeholder="password" @bind-value="passwordForm.Password">
                            @if (ToglePassword)
                            {
                                <img @onclick="()=>ToglePassword=!ToglePassword" src="/source/icons/eye slash.svg" alt="hiden">
                            }
                            else
                            {
                                <img @onclick="()=>ToglePassword=!ToglePassword" src="/source/icons/eye.svg" alt="show">
                            }
                        </div>
                        <div style="position: relative;">
                            <input type="@(ToglePassword ? "password" : "text")" class="form-control" placeholder="repeat password" @bind-value="passwordForm.RepeatPassword">
                        </div>
                    </div>
                    <div class="d-flex">
                        <button class="btn-purple mt-4 justify-content-center mx-auto"><span>CHANGE</span></button>
                    </div>
                </EditForm>
            }

            <span style="font-weight: 500;">or</span>
            <a href="/login" style="text-decoration:none;">login</a>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback ShowLogin { get; set; }
    private bool ToglePassword = false;
    private string errorMessage { get; set; } = string.Empty;
    private bool isChanged = false;
    private ResetPasswordDTO passwordForm = new();
    [Parameter, SupplyParameterFromQuery] public string Code { get; set; } = string.Empty;

    private async Task ChangePassword()
    {
        var response = await HttpClient.PostAsJsonAsync<ResetPasswordDTO>(HttpClient.BaseAddress + $"api/User/reset-password/confirm?code={Code}", passwordForm);

        if (response.IsSuccessStatusCode)
        {
            isChanged = !isChanged;
            errorMessage = string.Empty;

            await LocalStorage.RemoveItemAsync("token");
            await AuthStateProvider.GetAuthenticationStateAsync();

            await HttpClient.PostAsync(HttpClient.BaseAddress + "api/Auth/delete/refresh-token", null);
        }
        else
            errorMessage = await response.Content.ReadAsStringAsync();

    }
}
