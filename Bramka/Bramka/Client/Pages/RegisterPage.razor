@page "/register"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavManager

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegister" class="col-4">
    <div class="form-group mb-3">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="user.Name"></InputText>
    </div>

    <div class="form-group mb-3">
        <label for="surName">Surname</label>
        <InputText id="surName" class="form-control" @bind-Value="user.Surname"></InputText>
    </div>

    <div class="form-group mb-3">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="user.Email"></InputText>
    </div>

    <div class="form-group mb-3">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="user.Password" type="password" />
    </div>

    <div class="form-group mb-3">
        <label for="birthDate">Birthdate</label>
        <InputDate id="birthDate" class="form-control" @bind-Value="user.BirthDate" />
    </div>

    <div class="form-group mb-3">
        <label for="phone">Phone number</label>
        <InputText type="tel" id="phone" class="form-control" @bind-Value="user.PhoneNumber" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    UserRegistrationDTO user = new();

    private async Task HandleRegister()
    {
        var result = await Http.PostAsJsonAsync("api/Auth/register", user);
        if (result.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/");
        }
    }
}