@page "/forgot"
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject IHttpClientFactory Factory
@inject ILocalStorageService LocalStorage

<h3>Reset Password</h3>

@if (messageSent)
{
    <p>Message was sent to your email to reset password</p>
}
else
{
    <EditForm Model="email" OnValidSubmit="ResetPassword" class="col-4">
        <div class="form-group mb-3">
            <label for="email">Email</label>
            <InputText type="email" id="email" class="form-control" @bind-Value="email"></InputText>
            @if(isError)
            {
                <p>@errorMessage</p>
            }
        </div>
        <button class="btn btn-primary" type="submit" disabled="@btnClicked">Reset</button>
    </EditForm>
}


@code {
    private string email = string.Empty;
    private string errorMessage = string.Empty;
    private bool messageSent = false;
    private bool btnClicked = false;
    private bool isError = false;

    private async Task ResetPassword()
    {
        Console.WriteLine(email);
        btnClicked = true;
        isError = false;

        var _httpClient = Factory.CreateClient("SecuredServer");

        var result = await _httpClient.PostAsJsonAsync<string>(_httpClient.BaseAddress + "api/User/reset-password", email);

        if (result.IsSuccessStatusCode)
        {
            messageSent = true;
        }
        else
        {
            isError = true;
            errorMessage = await result.Content.ReadAsStringAsync();
        }

        await HttpClient.PostAsync(HttpClient.BaseAddress + "api/Auth/delete/refresh-token", null);

        btnClicked = false;
    }
}
